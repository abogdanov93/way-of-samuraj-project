{"version":3,"file":"static/js/493.1ea0b8cd.chunk.js","mappings":"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","sources":["webpack://it-kamasutra-project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://it-kamasutra-project/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://it-kamasutra-project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://it-kamasutra-project/./src/components/Dialogs/NewMessageForm/NewMessageForm.module.css?8955","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormControl/FormControl.jsx","hoc/withAuthRedirect.js","utils/validators.js","webpack://it-kamasutra-project/./src/components/common/FormControl/FormControl.module.css?004a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialog\":\"Dialogs_dialog__htSTl\",\"message\":\"Dialogs_message__ZEWo0\",\"newMessage\":\"Dialogs_newMessage__whKBA\"};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Dialog_link__dXI2F\",\"activeLink\":\"Dialog_activeLink__tmh2Y\"};","import React from \"react\";\nimport style from \"./Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props) => {\n    return (\n        <div className={style.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id} className={navData => navData.isActive ? style.activeLink : style.link}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from \"react\";\nimport style from \"./Message.module.css\";\n\nconst Message = (props) => {\n    return (\n        <div className={style.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"newMessage\":\"NewMessageForm_newMessage__MhO1J\",\"textarea\":\"NewMessageForm_textarea__glTC8\",\"button\":\"NewMessageForm_button__MrMEK\"};","import React from \"react\";\nimport style from \"./NewMessageForm.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Element, Textarea} from \"../../common/FormControl/FormControl\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst NewMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={style.newMessage}>\n            <div className={style.textarea}>\n                <Field component={Element}\n                       name={\"newMessageText\"}\n                       placeholder={\"Write a message...\"}\n                       validate={[required, maxLength10]}\n                       fieldType={\"textarea\"}\n                />\n            </div>\n            <div className={style.button}>\n                <button>Post</button>\n            </div>\n        </form>\n    )\n}\n\nconst NewMessageFormHOC = reduxForm({form: \"dialogNewMessageForm\"})(NewMessageForm);\nexport default NewMessageFormHOC;","import React from \"react\";\nimport style from \"./Dialogs.module.css\"\nimport commonStyles from \"../../App.module.css\"\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport NewMessageFormHOC from \"./NewMessageForm/NewMessageForm\";\n\nconst Dialogs = (props) => {\n    let dialogElement = props.dialogs.dialog\n        .map(d => <Dialog\n            key={d.id}\n            id={d.id}\n            name={d.name}/>);\n\n    let messageElement = props.dialogs.messages\n        .map(m => <Message\n            key={m.id}\n            id={m.id}\n            message={m.message}/>);\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText);\n    }\n\n    return (\n        <div className={style.dialogs}>\n            <div className={`${style.dialog} ${commonStyles.whiteBlock}`}>\n                {dialogElement}\n            </div>\n            <div className={`${style.message} ${commonStyles.whiteBlock}`}>\n                {messageElement}\n            </div>\n            <div className={`${style.newMessage} ${commonStyles.whiteBlock}`}>\n                <NewMessageFormHOC\n                    addMessage={props.addMessage}\n                    onSubmit={addNewMessage}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {addMessage} from \"../../redux/dialogsReducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogs\n    }\n}\n\nexport default compose(connect(mapStateToProps, {addMessage}), withAuthRedirect)(Dialogs);","import React from \"react\";\nimport style from \"./FormControl.module.css\";\n\nexport const Element = ({meta, input, ...props}) => {\n    const showError = meta.touched && meta.error;\n    return <div>\n        {showError && <div className={style.errorWarning}>{meta.error}</div>}\n        <props.fieldType className={showError && style.errorFrame} {...input} {...props}/>\n    </div>\n}\n","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => ({\n   isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class redirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to=\"/login/*\"/>\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToProps)(redirectComponent);\n}","export const required = value => value ? undefined : \"Field is required\";\n\nexport const maxLengthCreator = maxLength => value => {\n    return value && value.length <= maxLength\n        ? undefined\n        : `The maximum limit is ${maxLength} symbols`;\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormControl_form__R4h1G\",\"errorFrame\":\"FormControl_errorFrame__yWVax\",\"errorWarning\":\"FormControl_errorWarning__AtDt+\"};"],"names":["props","className","style","to","id","navData","isActive","name","message","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Element","placeholder","validate","required","fieldType","dialogElement","dialogs","dialog","map","d","messageElement","messages","m","commonStyles","addMessage","values","newMessageText","compose","connect","state","withAuthRedirect","Dialogs","meta","input","showError","touched","error","mapStateToProps","isAuth","auth","Component","redirectComponent","this","React","value","undefined","maxLength","length"],"sourceRoot":""}