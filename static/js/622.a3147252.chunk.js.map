{"version":3,"file":"static/js/622.a3147252.chunk.js","mappings":"wNACA,EAAwB,qBAAxB,EAAuD,uBAAvD,EAAsF,qB,2DCAtF,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAqG,4BAArG,EAA8I,8BAA9I,EAAqL,0B,SCO/KA,GAAcC,EAAAA,EAAAA,GAAiB,IAiCrC,GADqBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EA9BH,SAACE,GACf,OAAO,kBAAMC,UAAWC,EAAiBC,SAAUH,EAAMI,aAAlD,WACH,gBAAKH,UAAWC,EAAhB,UACI,SAACG,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EACXC,KAAM,QACNC,YAAa,SACbC,SAAU,CAACC,EAAAA,EAAUf,GACrBgB,UAAW,aAEtB,gBAAKX,UAAWC,EAAhB,UACI,SAACG,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EACXC,KAAM,WACNK,KAAM,WACNJ,YAAa,WACbC,SAAU,CAACC,EAAAA,EAAUf,GACrBgB,UAAW,aAEtB,iBAAKX,UAAWC,EAAhB,WACI,SAACG,EAAA,EAAD,CAAOC,UAAW,QACXE,KAAM,aACNK,KAAM,cACb,4CAEHb,EAAMc,QAAS,gBAAKb,UAAWc,EAAAA,EAAAA,aAAhB,SAAyCf,EAAMc,SAC/D,gBAAKb,UAAWC,EAAhB,UACI,mBAAQW,KAAK,SAAb,6BCVZ,GAAeG,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,MAAAA,EAAAA,GAAOC,OAAAA,EAAAA,IAAhD,EAjBc,SAAC,GAAqB,IAApBD,EAAmB,EAAnBA,MAKZ,OAL+B,EAAZF,QAKA,SAAC,KAAD,CAAUI,GAAG,eAEzB,iBAAKrB,UAAS,UAAKC,EAAL,YAAoBqB,EAAAA,EAAAA,YAAlC,WACH,eAAItB,UAAWC,EAAf,sBACA,gBAAKD,UAAWC,EAAhB,UAA6B,SAAC,EAAD,CAAcC,SAR9B,SAACqB,GACdJ,EAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,wB,6HCP7CpB,EAAU,SAAC,GAA6B,IAA5BqB,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAU7B,GAAW,YAC1C8B,EAAYF,EAAKG,SAAWH,EAAKd,MACvC,OAAO,2BACFgB,IAAa,gBAAK7B,UAAWC,EAAAA,EAAAA,aAAhB,SAAqC0B,EAAKd,SACxD,SAACd,EAAMY,WAAP,gBAAiBX,UAAW6B,GAAa5B,EAAAA,EAAAA,YAAsB2B,GAAW7B,S,4ECP3E,IAAMW,EAAW,SAAAqB,GAAK,OAAIA,OAAQC,EAAY,qBAExCpC,EAAmB,SAAAqC,GAAS,OAAI,SAAAF,GACzC,OAAOA,GAASA,EAAMG,QAAUD,OAC1BD,EADC,+BAEuBC,EAFvB,e,mBCFX,KAAgB,KAAO,0BAA0B,WAAa,gCAAgC,aAAe","sources":["webpack://it-kamasutra-project/./src/components/Login/Login.module.css?3530","webpack://it-kamasutra-project/./src/components/Login/LoginForm/LoginForm.module.css?1b2c","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/common/FormControl/FormControl.jsx","utils/validators.js","webpack://it-kamasutra-project/./src/components/common/FormControl/FormControl.module.css?004a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__4rE5+\",\"capture\":\"Login_capture__97t85\",\"block\":\"Login_block__rBvGF\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"LoginForm_loginForm__2wz68\",\"login\":\"LoginForm_login__CqM4D\",\"password\":\"LoginForm_password__OjgNF\",\"rememberMe\":\"LoginForm_rememberMe__PzxzJ\",\"button\":\"LoginForm_button__LJmHM\"};","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Element} from \"../../common/FormControl/FormControl\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport formStyle from \"../../common/FormControl/FormControl.module.css\";\nimport style from \"./LoginForm.module.css\";\n\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst LoginForm = (props) => {\n    return <form className={style.loginForm} onSubmit={props.handleSubmit}>\n        <div className={style.login}>\n            <Field component={Element}\n                   name={\"email\"}\n                   placeholder={\"E-mail\"}\n                   validate={[required, maxLength20]}\n                   fieldType={\"input\"}/>\n        </div>\n        <div className={style.password}>\n            <Field component={Element}\n                   name={\"password\"}\n                   type={\"password\"}\n                   placeholder={\"Password\"}\n                   validate={[required, maxLength20]}\n                   fieldType={\"input\"}/>\n        </div>\n        <div className={style.rememberMe}>\n            <Field component={\"input\"}\n                   name={\"rememberMe\"}\n                   type={\"checkbox\"}/>\n            <div>Remember me</div>\n        </div>\n        {props.error && <div className={formStyle.errorWarning}>{props.error}</div>}\n        <div className={style.button}>\n            <button type=\"submit\">Sign in</button>\n        </div>\n    </form>\n}\n\nconst LoginFormHOC = reduxForm({form: \"login\"})(LoginForm);\nexport default LoginFormHOC;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {logIn, logOut} from \"../../redux/authReducer\";\nimport {Navigate} from \"react-router-dom\";\nimport style from \"./Login.module.css\";\nimport commonStyles from \"./../../App.module.css\";\nimport LoginFormHOC from \"./LoginForm/LoginForm\";\n\nconst Login = ({logIn, isAuth}) => {\n    const onSubmit = (formData) => {\n        logIn(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (isAuth) return <Navigate to=\"/profile/\"/>\n\n    return <div className={`${style.login} ${commonStyles.whiteBlock}`}>\n        <h1 className={style.capture}>Sign in</h1>\n        <div className={style.block}><LoginFormHOC onSubmit={onSubmit}/></div>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {logIn, logOut})(Login);","import React from \"react\";\nimport style from \"./FormControl.module.css\";\n\nexport const Element = ({meta, input, ...props}) => {\n    const showError = meta.touched && meta.error;\n    return <div>\n        {showError && <div className={style.errorWarning}>{meta.error}</div>}\n        <props.fieldType className={showError && style.errorFrame} {...input} {...props}/>\n    </div>\n}\n","export const required = value => value ? undefined : \"Field is required\";\n\nexport const maxLengthCreator = maxLength => value => {\n    return value && value.length <= maxLength\n        ? undefined\n        : `The maximum limit is ${maxLength} symbols`;\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormControl_form__R4h1G\",\"errorFrame\":\"FormControl_errorFrame__yWVax\",\"errorWarning\":\"FormControl_errorWarning__AtDt+\"};"],"names":["maxLength20","maxLengthCreator","reduxForm","form","props","className","style","onSubmit","handleSubmit","Field","component","Element","name","placeholder","validate","required","fieldType","type","error","formStyle","connect","state","isAuth","auth","logIn","logOut","to","commonStyles","formData","email","password","rememberMe","meta","input","showError","touched","value","undefined","maxLength","length"],"sourceRoot":""}